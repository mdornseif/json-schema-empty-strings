name: Test, Build, and release
on:
  push:
    branches:
      - master
      - main
permissions:
  actions: read
  checks: read
  contents: write
  deployments: write
  issues: write
  packages: write
  pages: write
  statuses: write

jobs:
  test:
    name: Lint and test on Node ${{ matrix.node }} and ${{ matrix.os }}

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: ['16.x', '18.x']
        os:
          - ubuntu-latest
          # - windows-latest
          # - macOS-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'yarn'
          # registry-url: https://npm.pkg.github.com
          # always-auth: true
          # scope: '@hudora'

      - name: Install dependencies üì¶
        # run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.NODE_AUTH_TOKEN }}" >> ~/.npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
        run: yarn install --frozen-lockfile  --prefer-offline

      - name: Lint
        run: yarn lint

      - name: Test
        run: yarn test

      - name: Build üèó
        # run: yarn prepare
        run: yarn build

  release:
    name: Release
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
          # registry-url: https://npm.pkg.github.com
          # always-auth: true
          # scope: '@hudora'

      - name: Install dependencies üì¶
        # run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.NODE_AUTH_TOKEN }}" >> ~/.npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
        run: yarn install --frozen-lockfile  --prefer-offline

      - name: Build üèó
        # run: yarn prepare
        run: yarn build

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release

      - name: Deploy documentation to GitHub Pages
        run: yarn run doc:build ; yarn run doc:publish
        env:
          GH_TOKEN: ${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}
